- DX12 example module
	- write sample code myself 2.24 done
		- device initialize
			- factory
			- device
			- swapchain
			
		- pipeline init
			- command queue
			- backbuffer views
			- event
			- command allocator
			- command list
		- resources initialize
			- heap resource
				- vertex buffer
				- texture
				- constant buffer?
				- descriptor heap
			- pipeline resource
				- shader
					- VS
					- PS
				- root signature
				- PSO
		- frame action
			- wait for last frame complete
			- update constant buffer
			- reset command allocator
			- encode commands
			- set pso states
	- 简单的render engine
		- resource
			- API
				- asyc create
				- check resource ready
			- resource types
				- material
					- constants
					- shader
					- pso
					- root signature
				- texture
				- mesh
		- client framework
			- prepare
			- render
		- 实现细节
			- loop
				- resource async create线程
				- render+submit线程
			- API 数据 descriptor heap
				- 全局2个heap, 自己做version
				- 用root constant来点出自己用的CB和Texture的start index
			- resource memory allocation
				- 用placed resource + 大heap
			- material
				- 单constant buffer
				- 一个unbounded texture array
				- 每个material一个
- vulkan
- learn from unreal
	- how to handle resource memory allocation
	- RHICommandlist/API command list
- architecture design



- doing
	- SimpleDX12Renderer
		- CreateResource
			- CreateShader
				- ModuleSystemRedesign
					- refreshing code